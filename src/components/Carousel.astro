---
// Carousel component para mostrar imágenes de la escuela

// Importar las imágenes
const images = [
  { src: "/Carrusel principal/1.webp", title: "Aulas Especializadas", description: "Espacios modernos equipados con tecnología de última generación" },
  { src: "/carrusel aniversario 59/3.webp", title: "Polideportivo", description: "Instalaciones deportivas completas para la formación física" },
  { src: "/Carrusel ejercicios de campo/1.webp", title: "Ejercicios de Campo", description: "Formación práctica en situaciones reales" },
  { src: "/Carrusel dia del niño/1.webp", title: "Eventos Especiales", description: "Celebraciones y actividades para toda la comunidad" }
];
---

<section class="py-16 bg-white">
  <div class="container mx-auto px-4">
    <div class="text-center mb-12">
      <h2 class="text-3xl md:text-4xl font-bold font-playfair text-military-blue mb-4">
        Nuestras Instalaciones
      </h2>
      <div class="w-24 h-1 bg-yellow-500 mx-auto mb-6"></div>
      <p class="text-gray-600 max-w-2xl mx-auto">
        Conoce nuestras modernas instalaciones diseñadas para la formación integral de nuestros cadetes
      </p>
    </div>

    <!-- Carrusel principal -->
    <div class="relative max-w-6xl mx-auto">
      <div class="carousel-container overflow-hidden rounded-2xl shadow-2xl">
        <div class="carousel-track flex transition-transform duration-500 ease-in-out" id="carousel-track">
          {images.map((image, index) => (
            <div class="carousel-slide w-full flex-shrink-0 relative">
              <div class="aspect-video relative overflow-hidden">
                <img 
                  src={image.src} 
                  alt={image.title}
                  class="absolute inset-0 w-full h-full object-cover"
                />
                <div class="absolute inset-0 bg-black/50"></div>
                <div class="absolute inset-0 flex items-center justify-center">
                  <div class="text-center text-white p-8 max-w-3xl mx-auto">
                    <h3 class="text-4xl md:text-5xl font-bold mb-6 text-shadow-lg">{image.title}</h3>
                    <p class="text-lg md:text-xl text-shadow-md">{image.description}</p>
                  </div>
                </div>
              </div>
              <div class="absolute bottom-4 bg-black/50 text-white px-3 py-1 rounded text-sm">
                {image.title}
              </div>
            </div>
          ))}
        </div>
      </div>

      <!-- Controles del carrusel -->
      <button 
        id="prev-btn"
        class="absolute left-4 top-1/2 transform -translate-y-1/2 bg-white/90 hover:bg-white text-gray-800 p-3 rounded-full shadow-lg transition-all duration-300 hover:scale-110"
      >
        <svg class="w-6 h-6" fill="currentColor" viewBox="0 0 20 20">
          <path fill-rule="evenodd" d="M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z" clip-rule="evenodd"></path>
        </svg>
      </button>
      
      <button 
        id="next-btn"
        class="absolute right-4 top-1/2 transform -translate-y-1/2 bg-white/90 hover:bg-white text-gray-800 p-3 rounded-full shadow-lg transition-all duration-300 hover:scale-110"
      >
        <svg class="w-6 h-6" fill="currentColor" viewBox="0 0 20 20">
          <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd"></path>
        </svg>
      </button>

      <!-- Indicadores -->
      <div class="flex justify-center space-x-2 mt-6">
        {images.map((_, index) => (
          <button 
            class={`carousel-indicator w-3 h-3 rounded-full transition-all duration-300 ${index === 0 ? 'bg-military-blue' : 'bg-gray-300 hover:bg-gray-400'}`} 
            data-slide={index}
          ></button>
        ))}
      </div>
    </div>

    <!-- Thumbnails -->
    <div class="grid grid-cols-2 md:grid-cols-4 gap-4 mt-8 max-w-4xl mx-auto">
      {images.map((image, index) => (
        <button 
          class={`thumbnail-btn aspect-video rounded-lg overflow-hidden border-2 ${index === 0 ? 'border-military-blue' : 'border-transparent'} hover:border-military-blue transition-colors`} 
          data-slide={index}
        >
          <div class="w-full h-full relative">
            <img 
              src={image.src} 
              alt={image.title}
              class="w-full h-full object-cover"
            />
            <div class="absolute inset-0 bg-black/30 flex items-center justify-center">
              <span class="text-white text-sm font-medium">{image.title}</span>
            </div>
          </div>
        </button>
      ))}
    </div>
  </div>
</section>

<script>
  let currentSlide = 0;
  let startX: number | null = null;
  const totalSlides = document.querySelectorAll('.carousel-slide').length;
  const track = document.getElementById('carousel-track') as HTMLElement;
  const indicators = document.querySelectorAll('.carousel-indicator');
  const thumbnails = document.querySelectorAll('.thumbnail-btn');
  
  // Verificar que los elementos existan antes de usarlos
  if (!track || !indicators.length || !thumbnails.length) {
    console.error('No se encontraron elementos necesarios del carrusel');
  } else {
    function updateCarousel() {
      track.style.transform = `translateX(-${currentSlide * 100}%)`;
      
      // Actualizar indicadores
      indicators.forEach((indicator, index) => {
        if (index === currentSlide) {
          indicator.classList.remove('bg-gray-300');
          indicator.classList.add('bg-military-blue');
        } else {
          indicator.classList.remove('bg-military-blue');
          indicator.classList.add('bg-gray-300');
        }
      });
      
      // Actualizar thumbnails
      thumbnails.forEach((thumb, index) => {
        if (index === currentSlide) {
          thumb.classList.add('border-military-blue');
          thumb.classList.remove('border-transparent');
        } else {
          thumb.classList.remove('border-military-blue');
          thumb.classList.add('border-transparent');
        }
      });
    }
    
    function nextSlide() {
      currentSlide = (currentSlide + 1) % totalSlides;
      updateCarousel();
    }
    
    function prevSlide() {
      currentSlide = (currentSlide - 1 + totalSlides) % totalSlides;
      updateCarousel();
    }
    
    function goToSlide(slideIndex) {
      currentSlide = slideIndex;
      updateCarousel();
    }
    
    // Event listeners
    const nextBtn = document.getElementById('next-btn');
    const prevBtn = document.getElementById('prev-btn');
    
    if (nextBtn && prevBtn) {
      nextBtn.addEventListener('click', nextSlide);
      prevBtn.addEventListener('click', prevSlide);
    }
    
    // Indicadores
    indicators.forEach((indicator, index) => {
      indicator.addEventListener('click', () => goToSlide(index));
    });
    
    // Thumbnails
    thumbnails.forEach((thumb, index) => {
      thumb.addEventListener('click', () => goToSlide(index));
    });
    
    // Auto-play
    let autoPlay = setInterval(nextSlide, 5000);
    
    // Pausar auto-play en hover
    const carouselContainer = document.querySelector('.carousel-container');
    
    if (carouselContainer) {
      carouselContainer.addEventListener('mouseenter', () => {
        clearInterval(autoPlay);
      });
      
      carouselContainer.addEventListener('mouseleave', () => {
        autoPlay = setInterval(nextSlide, 5000);
      });
      
      // Touch/swipe support para móviles
      carouselContainer.addEventListener('touchstart', (e) => {
        if (e instanceof TouchEvent) {
          startX = e.touches[0].clientX;
        }
      });
      
      carouselContainer.addEventListener('touchend', (e) => {
        if (!startX || !(e instanceof TouchEvent)) return;
        
        const endX = e.changedTouches[0].clientX;
        const diff = startX - endX;
        
        if (Math.abs(diff) > 50) { // Minimum swipe distance
          if (diff > 0) {
            nextSlide();
          } else {
            prevSlide();
          }
        }
        
        startX = null;
      });
    }
  }
</script>

<style>
  .carousel-container {
    position: relative;
  }
  
  .carousel-track {
    will-change: transform;
  }
  
  .text-shadow-lg {
    text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.5);
  }
  
  .text-shadow-md {
    text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.5);
  }
  
  @media (max-width: 768px) {
    .absolute.left-4,
    .absolute.right-4 {
      display: none;
    }
  }
</style>
